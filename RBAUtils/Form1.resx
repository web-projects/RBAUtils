<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2OYbGkMxKx0i9xobQQA7
</value>
  </data>
</root>